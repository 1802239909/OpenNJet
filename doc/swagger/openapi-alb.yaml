# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: TML-ALB
    version: 142f39f
paths:
    /api/{path*}:
        get:
            tags:
                - NginxStatusApi
            description: 调用Nginx api
            operationId: NginxStatusApi_NginxApi
            parameters:
                - name: path*
                  in: path
                  required: true
                  schema:
                    type: string
                - name: path
                  in: query
                  description: status 路径
                  schema:
                    type: string
                - name: args
                  in: query
                  description: 请求参数
                  schema:
                    type: string
                - name: header
                  in: query
                  description: 请求头
                  schema:
                    type: string
                - name: body
                  in: query
                  description: 请求体
                  schema:
                    type: string
                - name: method
                  in: query
                  description: 请求方法
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NginxApiResp'
    /info/build:
        get:
            tags:
                - Info
            description: 获取编译信息
            operationId: Info_Build
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BuildInfoResp'
    /info/etcd:
        get:
            tags:
                - Info
            description: 获取nginx 编译信息
            operationId: Info_Etcd
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EtcdInfoResp'
    /info/nginx:
        get:
            tags:
                - Info
            description: 获取nginx 编译信息
            operationId: Info_Nginx
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NginxInfoResp'
    /info/version:
        get:
            tags:
                - Info
            description: 获取粗略版本信息
            operationId: Info_BaseVersion
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BaseVersionResp'
    /manage/db:
        get:
            tags:
                - Manage
            description: 查询db服务状态
            operationId: Manage_DbStatus
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DbStatusResp'
        put:
            tags:
                - Manage
            description: 配置db配置文件（自动重启db服务）
            operationId: Manage_DbConf
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfNtpReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /manage/log:
        get:
            tags:
                - Manage
            description: 查询tml-Log服务状态
            operationId: Manage_TmlLogStatus
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TmlLogResp'
        put:
            tags:
                - Manage
            description: 配置tml-Log配置文件（自动重启tmllog服务）
            operationId: Manage_TmlLogConf
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfNtpReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /manage/nginx:
        get:
            tags:
                - Manage
            description: 查询nginx服务状态
            operationId: Manage_NginxStatus
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NginxStatusResp'
    /manage/nginx/{status}:
        put:
            tags:
                - Manage
            description: 管理nginx服务状态
            operationId: Manage_NginxService
            parameters:
                - name: status
                  in: path
                  description: NTP 服务状态,可以是 stop、start、restart
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MangeService'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /manage/ntp:
        get:
            tags:
                - Manage
            description: 查询NTP服务状态
            operationId: Manage_NtpStatus
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NtpStatusResp'
        put:
            tags:
                - Manage
            description: 配置NTP配置文件（自动重启ntp服务）
            operationId: Manage_NtpConf
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfNtpReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /manage/ntp/{status}:
        get:
            tags:
                - Manage
            description: 管理ntp服务状态
            operationId: Manage_NtpService
            parameters:
                - name: status
                  in: path
                  description: NTP 服务状态,可以是 stop、start、restart
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /manage/rest:
        put:
            tags:
                - Manage
            description: 配置RestApi服务配置文件（自动重启RestApi服务）
            operationId: Manage_RestApiConf
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfRestApiReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx:
        get:
            tags:
                - Nginx
            description: 获取Nginx全部配置清单
            operationId: Nginx_NginxManifest
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NginxManifestResp'
        put:
            tags:
                - Nginx
            description: 上传Nginx全部配置的清单，对于该清单中不存在的项目执行删除操作
            operationId: Nginx_NginxUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MainBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        patch:
            tags:
                - Nginx
            description: 上传Nginx增量配置的清单，部分更新需要携带uuid，不删除原有配置
            operationId: Nginx_NginxManifestAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MainBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/certificate:
        post:
            tags:
                - Nginx
            description: 上传证书
            operationId: Nginx_UploadCertificateFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CertificateFile'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CertificateInfoResponse'
    /nginx/certificate/{name}:
        get:
            tags:
                - Nginx
            description: 查询证书信息
            operationId: Nginx_GetCertificateFile
            parameters:
                - name: name
                  in: path
                  description: 证书名称
                  required: true
                  schema:
                    type: string
                - name: content
                  in: query
                  description: 证书内容
                  schema:
                    type: string
                    format: bytes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CertificateResponse'
        put:
            tags:
                - Nginx
            description: 更新证书
            operationId: Nginx_UpdateCertificateFile
            parameters:
                - name: name
                  in: path
                  description: 证书名称
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CertificateFile'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CertificateInfoResponse'
        delete:
            tags:
                - Nginx
            description: 删除证书
            operationId: Nginx_DeleteCertificateFile
            parameters:
                - name: name
                  in: path
                  description: 证书名称
                  required: true
                  schema:
                    type: string
                - name: content
                  in: query
                  description: 证书内容
                  schema:
                    type: string
                    format: bytes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/certificates:
        get:
            tags:
                - Nginx
            description: 查询证书信息
            operationId: Nginx_GetCertificateList
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CertificateListResponse'
    /nginx/core:
        get:
            tags:
                - Nginx
            description: 查询 nginx core 块级配置
            operationId: Nginx_NginxCoreGet
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CoreBlockResp'
        put:
            tags:
                - Nginx
            description: 全量更新 nginx core 模块下配置
            operationId: Nginx_NginxCoreUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CoreBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        patch:
            tags:
                - Nginx
            description: 增加 nginx core 模块下配置
            operationId: Nginx_NginxCoreAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CoreBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/http:
        get:
            tags:
                - Nginx
            description: 清单式查询http块下配置。
            operationId: Nginx_NginxHttpGet
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HttpBlockResp'
        put:
            tags:
                - Nginx
            description: 全量更新 http 模块下配置。
            operationId: Nginx_NginxHttpUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HttpBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        patch:
            tags:
                - Nginx
            description: 清单式增加Http块下配置。
            operationId: Nginx_NginxHttpAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HttpBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/http/core:
        get:
            tags:
                - Nginx
            description: 查询http块下core 配置内容。
            operationId: Nginx_NginxHttpCoreGet
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CoreBlockResp'
        put:
            tags:
                - Nginx
            description: 全量更新 http 模块下core配置。
            operationId: Nginx_NginxHttpCoreUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CoreBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        patch:
            tags:
                - Nginx
            description: 增加Http块下core配置。
            operationId: Nginx_NginxHttpCoreAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CoreBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/http/servers:
        get:
            tags:
                - Nginx
            description: 查询http块下server 列表。
            operationId: Nginx_NginxHttpServersGet
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BlockListResp'
    /nginx/http/upstreams:
        get:
            tags:
                - Nginx
            description: 查询http块下upstream 列表。
            operationId: Nginx_NginxHttpUpstreamsGet
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BlockListResp'
    /nginx/http/{commandName}:
        post:
            tags:
                - Nginx
            description: 增加Http块下upstream 或者 server 配置。
            operationId: Nginx_NginxHttpBlockAdd
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BlockCommand'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/http/{commandName}/{name}:
        get:
            tags:
                - Nginx
            description: 查询http 单个upstream 或者server块
            operationId: Nginx_NginxHttpBlock
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  description: 块名称
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BlockResp'
        put:
            tags:
                - Nginx
            description: 全量更新 http 模块下server 或者 upstream 配置。
            operationId: Nginx_NginxHttpBlockUpdate
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  description: 块名称
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BlockCommand'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        delete:
            tags:
                - Nginx
            description: 按名称删除 http 模块下server 或者 upstream 。
            operationId: Nginx_NginxHttpBlockDelete
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  description: 块名称
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        patch:
            tags:
                - Nginx
            description: 增量增加 http 模块下server 或者 upstream 配置。
            operationId: Nginx_NginxHttpBlockPatch
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  description: 块名称
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BlockCommand'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/info/commands:
        get:
            tags:
                - Nginx
            description: 获取nginx指令列表
            operationId: Nginx_GetNginxCommands
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NginxCommandResponse'
    /nginx/stream:
        get:
            tags:
                - Nginx
            description: 查询Stream块下全量配置
            operationId: Nginx_NginxStreamGet
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StreamBlockResp'
        put:
            tags:
                - Nginx
            description: 全量更新 Stream 模块下配置，
            operationId: Nginx_NginxStreamUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CoreBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        patch:
            tags:
                - Nginx
            description: 清单式增加Stream块下配置，main下不允许upstream 与 server 配置
            operationId: Nginx_NginxStreamAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/HttpBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/stream/core:
        get:
            tags:
                - Nginx
            description: 查询Stream core配置
            operationId: Nginx_GetNginxStreamCore
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CoreBlockResp'
        put:
            tags:
                - Nginx
            description: stream core块下全量更新块和command
            operationId: Nginx_NginxStreamCoreUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CoreBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        patch:
            tags:
                - Nginx
            description: stream core块下增加块或者command
            operationId: Nginx_NginxStreamCoreAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CoreBlock'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/stream/servers:
        get:
            tags:
                - Nginx
            description: 查询stream块下server 列表。
            operationId: Nginx_NginxStreamServersGet
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BlockListResp'
    /nginx/stream/upstreams:
        get:
            tags:
                - Nginx
            description: 查询stream块下upstream 列表。
            operationId: Nginx_NginxStreamUpstreamsGet
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BlockListResp'
    /nginx/stream/{commandName}:
        post:
            tags:
                - Nginx
            description: 增加Stream块下upstream 或者 server 配置。
            operationId: Nginx_NginxStreamBlockAdd
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BlockCommand'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /nginx/stream/{commandName}/{name}:
        get:
            tags:
                - Nginx
            description: 查询stream 单个 upstream 或者server块
            operationId: Nginx_NginxStreamBlock
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  description: 块名称
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BlockResp'
        put:
            tags:
                - Nginx
            description: 全量更新 Stream 模块下server 或者 upstream 配置。
            operationId: Nginx_NginxStreamBlockUpdate
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  description: 块名称
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BlockCommand'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        delete:
            tags:
                - Nginx
            description: 按名称删除 stream 模块下server 或者 upstream 。
            operationId: Nginx_NginxStreamBlockDelete
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  description: 块名称
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
        patch:
            tags:
                - Nginx
            description: 增量更新 Stream 模块下server 或者 upstream 配置。
            operationId: Nginx_NginxStreamBlockPatch
            parameters:
                - name: commandName
                  in: path
                  description: 指令名称
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  description: 块名称
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BlockCommand'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /status/{path*}:
        get:
            tags:
                - NginxStatusApi
            description: 获取Nginx历史Status API信息
            operationId: NginxStatusApi_NginxStatus
            parameters:
                - name: path*
                  in: path
                  required: true
                  schema:
                    type: string
                - name: path
                  in: query
                  description: status 路径
                  schema:
                    type: string
                - name: args
                  in: query
                  description: 请求参数
                  schema:
                    type: string
                - name: start
                  in: query
                  description: 开始时间 (UTC 秒级时间戳）
                  schema:
                    type: integer
                    format: uint64
                - name: end
                  in: query
                  description: 结束时间 (UTC 秒级时间戳）
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NginxStatusApiResp'
    /system/login:
        post:
            tags:
                - System
            description: 登陆接口
            operationId: System_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginInfo'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TokenInfoResponse'
    /system/logout:
        delete:
            tags:
                - System
            description: 退出登陆接口
            operationId: System_Logout
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /system/role:
        post:
            tags:
                - System
            description: 增加角色
            operationId: System_RoleAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RoleInfo'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleInfoResp'
    /system/role/{uuid}:
        get:
            tags:
                - System
            description: 获取指定角色详细信息
            operationId: System_GetRole
            parameters:
                - name: uuid
                  in: path
                  description: uuid
                  required: true
                  schema:
                    type: string
                - name: role
                  in: query
                  description: 角色名称
                  schema:
                    type: string
                - name: permission
                  in: query
                  description: 权限标识
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleInfoResp'
        put:
            tags:
                - System
            description: 修改角色
            operationId: System_ChangeRole
            parameters:
                - name: uuid
                  in: path
                  description: uuid
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RoleInfo'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleInfoResp'
        delete:
            tags:
                - System
            description: 删除角色
            operationId: System_DeleteRole
            parameters:
                - name: uuid
                  in: path
                  description: uuid
                  required: true
                  schema:
                    type: string
                - name: role
                  in: query
                  description: 角色名称
                  schema:
                    type: string
                - name: permission
                  in: query
                  description: 权限标识
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /system/roles:
        get:
            tags:
                - System
            description: 查询角色列表
            operationId: System_RoleList
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleListResp'
    /system/user:
        post:
            tags:
                - System
            description: 增加单个用户
            operationId: System_UserAdd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInfo'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoResp'
    /system/user/passwd/reset:
        put:
            tags:
                - System
            description: 重置登陆密码
            operationId: System_ResetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginInfo'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /system/user/{uuid}:
        get:
            tags:
                - System
            description: 获取单个用户详细信息
            operationId: System_GetUser
            parameters:
                - name: uuid
                  in: path
                  description: uuid
                  required: true
                  schema:
                    type: string
                - name: name
                  in: query
                  description: 用户名
                  schema:
                    type: string
                - name: password
                  in: query
                  description: 密码
                  schema:
                    type: string
                - name: role
                  in: query
                  description: 角色名称
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoResp'
        put:
            tags:
                - System
            description: 修改用户角色
            operationId: System_ChangeUserRole
            parameters:
                - name: uuid
                  in: path
                  description: uuid
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInfo'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoResp'
        delete:
            tags:
                - System
            description: 删除用户
            operationId: System_DeleteUser
            parameters:
                - name: uuid
                  in: path
                  description: uuid
                  required: true
                  schema:
                    type: string
                - name: name
                  in: query
                  description: 用户名
                  schema:
                    type: string
                - name: password
                  in: query
                  description: 密码
                  schema:
                    type: string
                - name: role
                  in: query
                  description: 角色名称
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoDataResp'
    /system/users:
        get:
            tags:
                - System
            description: 查看用户列表
            operationId: System_UserList
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserListResp'
components:
    schemas:
        BaseVersion:
            type: object
            properties:
                version:
                    type: string
                    description: 版本号
                apiVersion:
                    type: integer
                    description: api版本号
                    format: int32
            description: 基本版本信息
        BaseVersionResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/BaseVersion'
            description: The request message containing the user's name.
        BlockCommand:
            type: object
            properties:
                commandName:
                    type: string
                    description: 指令名称
                name:
                    type: string
                    description: 块名称
                args:
                    type: string
                    description: 块参数 （map等无名称指令使用，不做嵌套处理）
                commands:
                    type: array
                    items:
                        $ref: '#/components/schemas/Command'
                    description: 块内部单条指令
                blocks:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: 块内部块级指令
            description: 普通指令块
        BlockListResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: 数据域
            description: 普通块查询返回
        BlockResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/BlockCommand'
            description: 普通块查询返回
        BuildInfo:
            type: object
            properties:
                version:
                    type: string
                    description: 版本号
                arch:
                    type: string
                    description: cpu 平台信息
                os:
                    type: string
                    description: 操作系统信息
                main:
                    type: integer
                    description: 主版本
                    format: int32
                sub:
                    type: integer
                    description: 子版本
                    format: int32
                commit:
                    type: string
                    description: commit sha
            description: 服务编译配置信息
        BuildInfoResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/BuildInfo'
            description: The request message containing the user's name.
        CertificateFile:
            type: object
            properties:
                name:
                    type: string
                    description: 证书名称
                content:
                    type: string
                    description: 证书内容
                    format: bytes
            description: 证书文件
        CertificateInfo:
            type: object
            properties:
                name:
                    type: string
                    description: 文件名称
            description: 证书文件信息
        CertificateInfoResponse:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/CertificateInfo'
            description: 证书返回response
        CertificateListResponse:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/CertificateInfo'
                    description: 数据域
            description: 证书列表返回response
        CertificateResponse:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/CertificateFile'
            description: 证书返回response
        Command:
            type: object
            properties:
                commandName:
                    type: string
                    description: 指令名称
                args:
                    type: string
                    description: 指令参数
            description: 单条指令
        ConfNtpReq:
            type: object
            properties:
                conf:
                    type: string
                    description: ntp配置文件内容
            description: 配置NTP服务请求体
        ConfRestApiReq:
            type: object
            properties:
                httpPort:
                    type: integer
                    format: int32
                httpAddr:
                    type: string
                grpcPort:
                    type: integer
                    format: int32
                grpcAddr:
                    type: string
        CoreBlock:
            type: object
            properties:
                commands:
                    type: array
                    items:
                        $ref: '#/components/schemas/Command'
                    description: 指令列表
                blocks:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: 块级指令列表
            description: 各级core模块配置参数
        CoreBlockResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/BlockCommand'
            description: 核心块查询返回
        DbStatus:
            type: object
            properties:
                status:
                    enum:
                        - START
                        - STOP
                        - RESTART
                    type: string
                    description: Db 服务状态
                    format: enum
                conf:
                    type: string
                    description: Db配置文件内容
        DbStatusResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/DbStatus'
        EtcdInfo:
            type: object
            properties:
                version:
                    type: string
                    description: 版本号
                endpoint:
                    type: string
                    description: 服务ip与端口
                memberId:
                    type: integer
                    description: 成员ID
                    format: uint64
                leaderId:
                    type: integer
                    description: leader ID
                    format: uint64
                clusterId:
                    type: integer
                    description: 集群ID
                    format: uint64
                dbSize:
                    type: integer
                    description: dbSize是物理分配给响应成员的后端数据库的大小（以字节为单位）。
                    format: int64
                health:
                    type: boolean
                    description: 是否健康 ，true为健康
            description: etcd 服务信息
        EtcdInfoResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/EtcdInfo'
                    description: 数据域
            description: etcd 版本信息
        HttpBlock:
            type: object
            properties:
                server:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: virtual server 块
                upstream:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: http upstrema 块
                httpCommands:
                    type: array
                    items:
                        $ref: '#/components/schemas/Command'
                    description: http main 级别指令
                httpBlocks:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: http main 级别扩展块（map，match 等），main下不允许配置 upstream 与 server 指令
            description: http 块
        HttpBlockResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/HttpBlock'
            description: http 块返回值
        LoginInfo:
            type: object
            properties:
                name:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
            description: 登录信息
        MainBlock:
            type: object
            properties:
                http:
                    type: array
                    items:
                        $ref: '#/components/schemas/HttpBlock'
                    description: http 块
                stream:
                    type: array
                    items:
                        $ref: '#/components/schemas/StreamBlock'
                    description: stream  块
                streamCommands:
                    type: array
                    items:
                        $ref: '#/components/schemas/Command'
                    description: core 级别指令
                streamBlocks:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: core 级别块（event 等）
            description: Nginx主配置文件块
        MangeService:
            type: object
            properties:
                status:
                    type: string
                    description: NTP 服务状态,可以是 stop、start、restart
        NginxApi:
            type: object
            properties:
                header:
                    type: object
                    additionalProperties:
                        type: string
                data:
                    type: string
                    format: bytes
        NginxApiResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/NginxApi'
            description: 查询status API 请求参数
        NginxCommand:
            type: object
            properties:
                name:
                    type: string
                    description: command 名称
                allowLevel:
                    type: array
                    items:
                        type: string
                    description: 允许所在层次
                argn:
                    type: array
                    items:
                        type: string
                    description: 参数个数要求
                block:
                    type: boolean
                    description: 是否是block
                any:
                    type: boolean
                    description: 是否可以任意参数
                flag:
                    type: boolean
                    description: 是否是flag
                moduleType:
                    type: string
                    description: 模块类型
                moduleName:
                    type: string
                    description: 模块名
            description: nginx 指令
        NginxCommandResponse:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/NginxCommand'
                    description: 指令列表
        NginxInfo:
            type: object
            properties:
                version:
                    type: string
                    description: nginx 版本信息
                build:
                    type: string
                    description: nginx 编译名称
                generation:
                    type: integer
                    description: reload 次数
                    format: int32
                loadTimestamp:
                    type: string
                    description: 上次重新加载配置的时间，ISO 8601格式，毫秒精度。
                timestamp:
                    type: string
                    description: ISO 8601格式的当前时间，精度为毫秒。
                masterPid:
                    type: integer
                    description: 启动work 进程的主进程的ID。
                    format: uint64
            description: Nginx 软件信息
        NginxInfoResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/NginxInfo'
        NginxManifestResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/MainBlock'
        NginxStatusApiInfo:
            type: object
            properties:
                time:
                    type: string
                    description: API 请求时间
                json:
                    type: string
                    description: body json
        NginxStatusApiResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/NginxStatusApiInfo'
                    description: 时间区间API列表
            description: 查询status API 请求参数
        NginxStatusResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/NginxStatusStr'
        NginxStatusStr:
            type: object
            properties:
                status:
                    type: string
                    description: Nginx 服务状态
                masterId:
                    type: integer
                    description: master 进程ID
                    format: int32
        NoDataResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
            description: 无数据通用返回
        NtpStatus:
            type: object
            properties:
                status:
                    enum:
                        - START
                        - STOP
                        - RESTART
                    type: string
                    description: NTP 服务状态
                    format: enum
                conf:
                    type: string
                    description: ntp配置文件内容
        NtpStatusResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/NtpStatus'
        Result:
            type: object
            properties:
                code:
                    type: integer
                    description: 错误状态码
                    format: int32
                msg:
                    type: string
                    description: 错误提示信息
                desc:
                    type: string
                    description: 错误详细描述
                mataData:
                    type: object
                    additionalProperties:
                        type: string
                    description: 元数据
        RoleInfo:
            type: object
            properties:
                role:
                    type: string
                    description: 角色名称
                permission:
                    type: string
                    description: 权限标识
                uuid:
                    type: string
                    description: uuid
            description: 角色信息
        RoleInfoResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/RoleInfo'
            description: 单个角色返回值
        RoleListResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleInfo'
                    description: 角色列表
            description: 角色列表返回值
        StreamBlock:
            type: object
            properties:
                server:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: virtual server 块
                upstream:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: stream upstrema 块
                streamCommands:
                    type: array
                    items:
                        $ref: '#/components/schemas/Command'
                    description: stream main 级别指令（main指令）
                streamBlocks:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlockCommand'
                    description: stream main 级别扩展块（map，match 等）
            description: stream 块
        StreamBlockResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/StreamBlock'
            description: stream 块返回值
        TmlLogResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/TmlLogStatus'
        TmlLogStatus:
            type: object
            properties:
                status:
                    enum:
                        - START
                        - STOP
                        - RESTART
                    type: string
                    description: Tml-log 服务状态
                    format: enum
                conf:
                    type: string
                    description: Db配置文件内容
        TokenInfo:
            type: object
            properties:
                token:
                    type: string
                    description: jwt token
                expiration:
                    type: string
                    description: 过期时间
            description: token 信息
        TokenInfoResponse:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/TokenInfo'
            description: 登录返回体
        UserInfo:
            type: object
            properties:
                name:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
                role:
                    type: string
                    description: 角色名称
                uuid:
                    type: string
                    description: uuid
            description: 用户信息
        UserInfoResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    $ref: '#/components/schemas/UserInfo'
            description: 单个用户返回值
        UserListResp:
            type: object
            properties:
                res:
                    $ref: '#/components/schemas/Result'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
                    description: 用户列表
            description: 用户列表返回值
tags:
    - name: Info
      description: 软件信息相关服务.
    - name: Manage
      description: 管理ALB相关服务.
    - name: Nginx
      description: 管理Nginx配置下发.
    - name: NginxStatusApi
      description: 查看Nginx当前与历史版本Status API状态
    - name: System
      description: 系统管理相关接口
